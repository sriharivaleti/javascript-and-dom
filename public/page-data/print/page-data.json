{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"8cfe6a90-43df-5d43-a6ae-cb42913151ac","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = themes.yellow;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"An Intro to JavaScript and the DOM\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h1\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, \"An Intro to JavaScript and the DOM\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"A Brief History of JavaScript\"), mdx(\"p\", null, \"Brendan Eich, a programmer who worked for Netscape Communications Corporation, created JavaScript in 1995. It took him only 10 days to develop JavaScript, which then went under the name Mocha.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Why JavaScript?\"), mdx(\"p\", null, \"Eich created JavaScript for Netscape Navigator, and it quickly became known as LiveScript. Then later, the Netscape team changed the name to JavaScript to reflect Netscape's support of the Java programming language in its browser. At the time, people said it was a marketing tactic to connect a brand new language (JavaScript) to a popular language at the time (Java). This was despite the fact that Java and Javascript have nothing to do with each other. This confusion between the two languages exists to this day!\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"The Reason For JS Name Change\"), mdx(\"p\", null, \"According to Axel Rauschmayer in his book \", mdx(\"code\", null, \"Speaking JavaScript: An In-Depth Guide for Programmers\"), \",\"), mdx(\"blockquote\", null, \"Knowing why and how JavaScript was created helps us understand why it is the way it is.\"), mdx(\"p\", null, \"I'd like to read a snippet from his book to give you a bit of history behind the language from a different, deeper, and more professional perspective.\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Next, I will go to the book online to Chapter 4 and read from it so the students will understand why JavaScript was originally created. Great explanation there. \", mdx(\"a\", {\n    href: \"http://speakingjs.com/es5/ch04.html\",\n    target: \"_blank\",\n    style: {\n      color: \"#fff\"\n    }\n  }, \"Chapter 4. How JavaScript Was Created\"))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What is JavaScript?\"), mdx(\"p\", null, \"JavaScript is a scripting or programming language that allows you to create complex features on web pages. Whenever a page displays dynamic content you know that JavaScript is probably behind it. With JavaScript, you can display content updates, animated 2D/3D graphics, scrolling video jukeboxes,  image slide shows, video players, audio players, etc.\"), mdx(\"p\", null, \"In simpler and more direct terms, JavaScript is a language that the browser reads and does stuff with.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"JavaScript Isn't Only For The Browser Anymore\"), mdx(\"p\", null, \"JavaScript is no longer just for the browser anymore. Today, there is \", mdx(\"a\", {\n    href: \"https://nodejs.org/en/\"\n  }, \"Node.js\"), \", an open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside of a browser, and \", mdx(\"a\", null, \"MongoDB\"), \", an Open Source database written in C++.. BUT what is great about MongoDB for JavaScript Developers, is that it supports Server-Side JavaScript execution. This allows a JavaScript developer to use a single programming language for both client and server side code.. AND \", mdx(\"code\", null, \"MongoDB is a document oriented database\"), \". Node.js was released in June, 2011, and MongoDB was realased on February 11, 2009.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What is The DOM?\"), mdx(\"p\", null, \"The Document Object Model, or the DOM, is a platform and language neutral interface that allows programs and scripts to dynamically access and update the content, structure and style of documents.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What is The DOM?\"), mdx(\"p\", null, \"The DOM is the DATA REPRESENTATION of the objects that comprise the structure and content of a document on the web.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What is The DOM?\"), mdx(\"p\", null, \"According to the WHATWG (Web Hypertext Application Technology Group),\"), mdx(\"blockquote\", null, \"The DOM Standard defines the core infrastructure used to define the web.\"), \"and\", mdx(\"blockquote\", null, \"The DOM defines a platform-neutral model for events, aborting activities, and node trees.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Who Defines (and maintains) the DOM Standard?\"), mdx(\"p\", null, \"The standardization of the DOM was first handled by the World Wide Web Consortium (W3C), which last developed a recommendation in 2004.\"), mdx(\"p\", null, \"Subsequently, WHATWG took over the development of the Standard, publishing it as a living document.\"), mdx(\"p\", null, \"The W3C now PUBLISHES stable snapshots of the WHATWG standard.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"WHATWG DOM Specs\"), mdx(\"p\", null, \"WHATWG breaks down the DOM Standards into the following:\"), mdx(\"ul\", null, mdx(\"li\", null, \"Goals/Infrastructure\"), mdx(\"li\", null, \"Goals/Events\"), mdx(\"li\", null, \"Goals/Aborting ongoing activities\"), mdx(\"li\", null, \"Goals/Nodes\"), mdx(\"li\", null, \"Goals/Ranges\"), mdx(\"li\", null, \"Goals/Traversal\"), mdx(\"li\", null, \"Goals/Sets\"), mdx(\"li\", null, \"Goals/XPath\"), mdx(\"li\", null, \"Goals/Historical\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Go to \", mdx(\"a\", {\n    href: \"https://dom.spec.whatwg.org/\",\n    target: \"_blank\"\n  }, \"DOM - The Living Standard on WHATWG to show what the page consists of.\"))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"The DOM and JavaScript\"), \"The DOM is NOT a programming language, but without it, Javascript would not have any model or concept of web pages, HTML documents, XML documents, and their parts (elements). Every element in a document, the document as a whole, the head, the body, the footer, p tags, header tags, sections, articles, navs, ul tags, li tags, the tables within the document, table headers, text within the table cells, is part of the DOM for that document. They all can be accessed and manipulated using the DOM and Javascript.\"), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"How is a Web Page Built?\"), mdx(\"p\", null, \"How a browser goes from a source HTML document to displaying a styled and interactive page in the viewport is called the \", mdx(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path\"\n  }, \"Critical Rendering Path\"), \".\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Refresher: The Viewport\"), mdx(\"p\", null, \"The Viewport is the part of the web page that the viewer can see. Scrollbars move the viewport to show other parts of the page.\"), mdx(\"p\", null, \"The viewport differs with different devices, i.e. mobile phone, ipad, tablet, laptop, or desktop, etc.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What Exactly is The Critical Rendering Path?\"), mdx(\"p\", null, \"The Critial Rendering Path is the sequence of steps the browser goes through to convert HTML, CSS, and JavaScript into pixels on the screen. Optimizing the critical render path optimizes render performance.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What Does the Critical Rendering Path Include?\"), mdx(\"p\", null, \"It includes the DOM, the CSS Object Model (CSSOM), render tree, layout, and paint.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"So How Does Browser Rendering Work?\"), mdx(\"p\", null, \"In order for the browser to render content on the page, it has to go through the five steps mentioned in the previous slide:\"), mdx(\"code\", null, \"The DOM, the CSS Object Model (CSSOM), the render tree, layout, and paint.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"When and How Is the DOM Created in the Critical Rendering Path Process?\"), mdx(\"p\", null, \"To process an HTML file, and get to the DOM, the browser has to go through four steps:\"), mdx(\"code\", null, \"Convert bytes to characters, identify tokens, convert tokens to nodes, build the DOM tree\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"HTML Parser\"), mdx(\"p\", null, \"Basically, it is the HTML parser, i.e. implemented by the browser, that composes encoding, pre-parsing, tokenization, and tree formation.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Tokens\"), mdx(\"p\", null, \"Tokenization is the first half of \", mdx(\"i\", null, \"parsing\"), \" \", mdx(\"code\", null, \"HTML\"), \". It means turning the \", mdx(\"code\", null, \"HTML\"), \" \", mdx(\"i\", null, \"markup\"), \" into individual tokens such as \\\"begin tag\\\" or \\\"opening tag\\\", \\\"end tag\\\", etc.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '100%',\n      margin: '0 auto'\n    }\n  }, mdx(\"img\", {\n    src: Tokenization\n  })), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '100%',\n      margin: '0 auto'\n    }\n  }, mdx(\"img\", {\n    src: DOMTree\n  })), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Layout\"), mdx(\"p\", null, \"Once the \", mdx(\"code\", null, \"Render Tree\"), \" is built, \", mdx(\"i\", null, \"establishment\"), \" of the \", mdx(\"code\", null, \"Layout\"), \" becomes possible.\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(\"code\", null, \"Layout\"), \" is dependent on the size of the screen.\"), mdx(\"li\", null, \"The \", mdx(\"code\", null, \"Layout\"), \" \", mdx(\"i\", null, \"step\"), \" determines where and how the elements are positioned on the page, determining the \", mdx(\"code\", null, \"width\"), \" and \", mdx(\"code\", null, \"height\"), \" of each element, and where they are in relation to each other.\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Ask students what they think this Layout relates/refers to in design?\"))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"What is the Width of an Element?\"), mdx(\"p\", null, \"Block level elements, such as \", mdx(\"code\", null, \"imgs\"), \", have a default width of 100% of the width of their parent.\"), mdx(\"ul\", null, mdx(\"li\", null, \"An element with a width of 75%, will be three quarters of the width of its parent.\"), mdx(\"li\", null, \"Unless otherwise specified, the \", mdx(\"code\", null, \"body\"), \" will have a \", mdx(\"i\", null, \"default\"), \" \", mdx(\"code\", null, \"width\"), \" of 100%. This means that it will fill 100% of the width of the viewport.\"), mdx(\"li\", null, \"The width of the device impacts Layout.\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Again, ask how does one troubleshoot the issue of device width across different devices with different widths AND (potentially) heights? What are two things one can implement to solve this problem?\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"The Viewport Revisited\"), mdx(\"p\", null, \"The \", mdx(\"i\", null, \"viewport\"), \" \", mdx(\"code\", null, \"meta tag\"), \" defines the width of the layout viewport, impacting the Layout. Without it, the browser uses the default viewport width, which on \", mdx(\"i\", null, \"by-default\"), \" \", mdx(\"code\", null, \"full-screen browsers\"), \" is \", mdx(\"code\", null, \"960px\"), \". \"), mdx(\"p\", null, \"On by-default browsers, i.e., your iphone or tablet, if you set the viewport meta tag to \", mdx(\"code\", null, \"name=\\\"viewport\\\" content=\\\"width=device-width\\\"\"), \", then the width will be the width of the device instead of the default viewport width.\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Actually, one should set the viewport meta tag to \", mdx(\"code\", null, mdx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  })))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Complete Viewport Meta Tag\"), mdx(\"code\", null, \"name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"\"), mdx(\"p\", null, mdx(\"code\", null, \"initial-scale=1.0\\\"\"), \" sets the initial zoom level when the page is first loaded by the browser.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Paint\"), mdx(\"p\", null, \"The \", mdx(\"i\", null, \"last\"), \" \", mdx(\"code\", null, \"step\"), \" in the \", mdx(\"i\", null, \"critical rendering path\"), \" is PAINT, as in painting pixels to the screen.\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(\"i\", null, \"Onload\"), \", the entire screen is painted.\"), mdx(\"li\", null, \"After that, only impacted areas, areas on the screen which have been modified, will be repainted. Browsers are optimized to repaint the minimum required. True to a certain extent. Depends on how much is going on with your JavaScript AND CSS at any given time.\"))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Paint time\"), mdx(\"p\", null, \"Paint time \", mdx(\"i\", null, \"depends on\"), \" what updates are being \", mdx(\"i\", null, \"applied\"), \" to the \", mdx(\"code\", null, \"render tree\"), \".\"), mdx(\"p\", null, \"Painting in of itself is fast, and not the most impactful in improving performance of your app, but one does have to take into consideration LAYOUT and REPAINT when measuring how long an animation frame may take to render/re-render, for example.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Styles and Paint\"), mdx(\"p\", null, \"Styles applied to each node increase paint time, but one should not just remove styles to improve performance. One has to consider whether the potentially incremental (very small) performance improvement outweighs the experience it provides to the visitor.\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Understanding the DOM Means a Better Understanding of JavaScript and How it Works\"), mdx(\"p\", null, \"The DOM is essential to making websites interactive. JavaScript is the client-side scripting language that connects to the DOM and directly manipulates it in the browser.\"), mdx(\"p\", null, mdx(\"i\", null, \"Understanding\"), \" the \", mdx(\"code\", null, \"DOM\"), \" means a \", mdx(\"i\", null, \"better understanding\"), \" of \", mdx(\"code\", null, \"JavaScript\"), \" and how it works. For those of you who want to \", mdx(\"i\", null, \"further\"), \" your \", mdx(\"b\", null, \"understanding\"), \" of \", mdx(\"code\", null, \"JavaScript\"), \", or want to go on to \", mdx(\"i\", null, \"using\"), \" \", mdx(\"code\", null, \"libraries\"), \" such as \", mdx(\"code\", null, \"React\"), \" or \", mdx(\"code\", null, \"frameworks\"), \" such as \", mdx(\"code\", null, \"Vue.js\"), \", \", mdx(\"code\", null, \"Angular.js\"), \", \", mdx(\"code\", null, \"Nuxt.js\"), \", or \", mdx(\"code\", null, \"Next.js\"), \", for example, \", mdx(\"i\", null, \"understanding\"), \" the \", mdx(\"code\", null, \"DOM\"), \" is \", mdx(\"i\", null, \"crucial\"), \".\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Related Resources\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://www.thebalancecareers.com/learn-javascript-online-2071405\"\n  }, \"Places to Learn JavaScript Online\"), \": \", mdx(\"i\", null, \"Laurence Bradford\"), \", for \", mdx(\"b\", null, \"the balance careers\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://www.checkmarx.com/blog/javascript-history-infographic/\"\n  }, \"The History of JavaScript [INFOGRAPHIC]\"), \": \", mdx(\"b\", null, \"checkmarx\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://spec.whatwg.org/\"\n  }, \"WHATWG - Standards\"), \": \", mdx(\"b\", null, \"WHATWG\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://dom.spec.whatwg.org/\"\n  }, \"WHATWG - DOM Standard\"), \": \", mdx(\"b\", null, \"WHATWG\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://www.w3.org/DOM/\"\n  }, \"Document Object Model (DOM)\"), \": \", mdx(\"b\", null, \"W3C\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://bitsofco.de/what-exactly-is-the-dom/\"\n  }, \"What, exactly, is the DOM?\"), \": \", mdx(\"i\", null, \"Ire Aderinokun\"), \", for \", mdx(\"b\", null, \"bitsofcode\")))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Related Resources (contd)\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\"\n  }, \"Introduction To The DOM\"), \": \", mdx(\"b\", null, \"MDN\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path\"\n  }, \"Critical Rendering Path\"), \": \", mdx(\"b\", null, \"MDN\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://www.w3.org/2002/07/26-dom-article.html\"\n  }, \"The Document Object Model (DOM)\"), \": \", mdx(\"b\", null, \"W3C\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"http://speakingjs.com/\"\n  }, \"Speaking JavaScript: An In-Depth Guide for Programmers\"), \": \", mdx(\"i\", null, \"free\"), \" \", mdx(\"b\", null, \"O'Reilly\"), \" book online\"), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://www.w3resource.com/mongodb/introduction-mongodb.php\"\n  }, \"Introduction to MongoDB\"), \": \", mdx(\"b\", null, \"w3resource\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Document_Object_Model\"\n  }, \"Document Object Model\"), \": \", mdx(\"b\", null, \"wikipedia\")))), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      width: '90%'\n    }\n  }, mdx(\"h2\", null, \"Related Resources (contd)\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://stackoverflow.com/questions/2939693/what-is-viewport-in-html\"\n  }, \"What is viewport in HTML?\"), \": \", mdx(\"b\", null, \"stackoverflow\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://developers.google.com/web/fundamentals/performance/critical-rendering-path\"\n  }, \"Critical Rendering Path\"), \": \", mdx(\"b\", null, \"Google\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://medium.com/@luisvieira_gmr/understanding-the-critical-rendering-path-rendering-pages-in-1-second-735c6e45b47a\"\n  }, \"Understanding the critical rendering path, rendering pages in 1 second\"), \": \", mdx(\"i\", null, \"Luis Vieira\"), \", on \", mdx(\"b\", null, \"Medium\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference\"\n  }, \"Performance Analysis Reference\"), \": \", mdx(\"b\", null, \"Google\")), mdx(\"li\", null, mdx(\"a\", {\n    href: \"https://alistapart.com/article/tags-to-dom/\"\n  }, \"Tags to DOM\"), \": \", mdx(\"i\", null, \"Travis Leithead\"), \", for \", mdx(\"b\", null, \"A List Apart\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"8cfe6a90-43df-5d43-a6ae-cb42913151ac","slug":"","title":""}}}